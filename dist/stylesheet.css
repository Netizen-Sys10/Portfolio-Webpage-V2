* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

@font-face {
    font-family: "Mark Pro";
    src: url('./Fonts/Mark-Pro-Heavy.otf');
    font-weight: 700;
}

@font-face{
    font-family: "Mark Pro Heavy";
    font-style:normal;
    src:local('Mark Pro'),url(https://fonts.cdnfonts.com/s/45235/MARKPROBOLD.woff); 
}

@font-face{
    font-family:"Mark Pro";
    font-style:normal;
    font-weight:900;
    src:local('Mark Pro'),url(https://fonts.cdnfonts.com/s/45235/MARKPROBLACK.woff);
 
}

@font-face {
    font-family: 'Circular Std Book';
    src: url('./Fonts/CircularStd-Book.woff2');
    font-weight: 500;
}


:root {
    --font-primary: #c4c4c4;
    --bg-primary: #051108de;
    /*#10101a,#132418 */
    --bg-secondary: #9fd1d4;
    --grad-1 : #9fd1d4 ;
    --grad-2 : #b19fd4;
}


body {
    background-color: var(--bg-primary);
    min-height: 100%;
}

html {
    min-height: 100%;
}

h2 {
    font-size: 3rem;
    font-family: "Mark Pro";
    -webkit-text-stroke: 1px white;
    letter-spacing: 0.3rem;
    font-weight: 900;
    background-image: linear-gradient(90deg,#ffffff00,#ffffff00); /*linear-gradient(90deg,#b0f3f1,#ffcfdf);*/
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    display: inline-block;
}

@media screen and (max-width:1024px) {
    h2 {
        font-size: 2.5rem;
    }
}

@media screen and (max-width:500px) {
    h2 {
        font-size: 1.8rem;
    }
}


p {
    font-family: 'Circular Std Book';
    font-size:1rem;
    color: var(--font-primary);
    line-height: 130%;
}


/* This container takes up all the space.
 That means it doesn't constrain its children size, 
 if they go beyond screen width or height*/
.screen-container {
    box-sizing: border-box;
    display: block;
    /* pos:fixed is relative to the viewport*/
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    overflow-y: auto;
    height: 100%;
    background-color: var(--bg-primary)
}


/* I don't want this container to ever be wider than the screen.
It should simply fill out its parent. 
Aligns children since the child container has a max height. 
On tablets and below we want the content to start
at the top of the screen. */
.screen-width-container {
    max-width: 100vw;
    height:100%;
    box-sizing:border-box;
    justify-content:center;
    align-items:flex-start;
    display:flex; 
}


/* If wider than a tablet, we'll center the child content-container
and for that  we need to cover the whole viewport */
@media screen and (min-width:1025px) {
    .screen-width-container {
     height:100vh;
     max-height:100vh;
     align-items:center;
     overflow:hidden
    }
}


   /* The content container can be as big as the screen but should be max
   1280px to maintain the "card" look on desktop. 
   Why is pos:relative? Maybe for the z-index of the child? */
.outer-content-container {
    width:100vw;
    max-width:1280px;
    box-sizing:border-box;
    margin-top:0;
    margin-bottom:0;
    padding:7.5px;
    /*This display flex seems needed to enable the childs flex-basis:100, but doesnt seem
    to change anything.*/
    display:flex;
    position:relative;
    background-color: var(--bg-primary);
}

@media screen and (min-width:500px) {
 .outer-content-container {
    padding:20px
 }
}



/* Has an additional padding of 15/30 and rounded borders, so it's height when empty 
is caused by those. */
.inner-content-container {
    -webkit-user-select:none;
    user-select:none;
    z-index:2;
    /*background:#1d1d20;*/
    border-radius:5px;
    /*flex-wrap:wrap;*/
    /*What is the point of flex-basis:100%?? */
    flex-basis:100%;
    padding:15px;
    overflow:hidden;
    /*background-color: var(--bg-secondary);*/
    border: 3px solid;
    border-color: #b0f3f1;
   }

@media screen and (min-width:500px) {
    .inner-content-container  {
     padding:30px
    }
}


.navbar {
    display: flex;
    justify-content: space-between;
}

.logo {
    width: 50px;
    height: 50px;
    cursor: pointer;
}

.logo-rotate {
    transform: rotate(360deg);
    transition: all 0.2s linear;
}


.navbar-list {
    list-style: none;
    display: flex;
}

.list-item {
    margin: 0 14px;
}

.icon {
    width: 25px;
    height: 25px; 
}


.content {
    /* This attribute may be present to make rotating the text less jarring */
    backface-visibility: hidden;
    display: flex;
    /*The flex direction changes .overview flex-basis from width to height*/
    flex-direction: column;
    justify-content: center;
    align-items: center;
    /* Parent height - parent padding - 100px = height*/
    /*min-height: calc(100% - 100px);*/
    /*If we only set min-height, we dont get a calculated, inheritabe height it seems*/
    /*height: calc(100% - 100px);*/
    margin-top: 40px;
}

@media screen and (min-width:1025px) {
    .content {
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        padding-left: 50px;
    }
}



/* Sets the intial size of the container to 53% of the parents size?
 But only in flex-dire: row, otherwise header+main+footer determine the size
 of inner-content-container*/
.overview {
    position: relative;
    flex-basis: 53.4752%;
    /*border: 3px solid;*/
    border-color: #8ee9ac;
    /*aspect-ratio: 16/9;*/
    height: auto;
}




@media screen and (max-width: 1024px) {
    .overview-height {
        min-height: 450px;
    }
    .overview {
        aspect-ratio: 0;
         flex-basis: auto;
    }
}


@media screen and (max-width:500px) {
    .overview-height {
        min-height: 350px;
    }
    .overview {
        aspect-ratio: 0;
        /* flex-basis: 53.4752%;*/
    }
}


/*Will be manipulated for animation purposes*/
.first-message {
    transform-origin: top right;
opacity: 0;
transform: scaleX(0);
transition: all 0.2s linear;
}


.message-title {
    font-size: 7rem;
    -webkit-text-stroke: 1px white;
    font-family: "Mark Pro";
    letter-spacing: 0.3rem;
    font-weight: 900;
    background-image: linear-gradient(90deg,#b0f3f100,#ffcfdf00);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    display: inline-block;
}

@media screen and (max-width: 1024px) {
    .message-title {
        font-size: 5rem;
        margin-bottom: 1.5rem;
    }
}


@media screen and (max-width:500px) {
    .message-title {
        font-size: 3rem;
    }
}


.color-line {
    margin-left: 30px;
    font-size: .9em;
    font-weight: 100;
    line-height: 1.6;
    display: block;
    position: relative;
}

.color-line:before {
    content:"";
    width:2px;
    background:linear-gradient(180deg,#b0f3f1,#ffcfdf);
    position:absolute;
    top:0;
    bottom:0;
    left:-30px
}

.footer {
    width: 100%;
    text-align: center;
    padding: 35px 0 27px;
    font-size: 14px;
}

@media screen and (min-width:500px) {
    .footer  {
     text-align: right;
    }
}

/* We want this to happen on click, or on hover.
On load seemingly is done with javascript. */
.project {
    transform-origin: 100%;
    opacity: 0;
    width: 100%;
    min-height: 350px;
    transition: all 0.2s linear;
    position: absolute;
    top: 0;
    left: 0;
    transform: scaleX(0);
}

@media screen and (max-width:1024px) {
    .project  {
        min-height: 250px;

    }
}

.project-show {
    opacity: 1;
    transform: scaleX(1);
    
}


.menu {
    flex-basis: 30%;
}



@media screen and (max-width:1024px) {
    .project  {
        min-height: 250px;
    }
    .menu {
        margin-top: 4rem;
    }
}

.menu-list {
    position: relative;
    text-align: center;
}



a {
    text-decoration: none;
    color: var(--font-primary);
}

.links {
    z-index: 1;
    font-family: 'Circular Std Book';
    font-size: 1rem;
    color: var(--font-primary);
    line-height: 130%;
    border-top-left-radius: 7px;
    flex-direction: column;
    margin-left: 0;
    padding: 30px 30px 0;
    display: flex;
    position: relative;
}

.link {
   color:#e9e9e9;
}


.link-cont {
    padding-bottom: 0.5rem;
}

.link:hover {
    transition: all linear 0.15s;
    font-size: 1.2rem;
   
}

.current-link {
    transition: all linear 0.15s;
    font-size: 1.2rem;
    background-image: linear-gradient(90deg,#b0f3f1,#ffcfdf);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.project-card {

    display: flex;
    flex-direction: column;
    padding: 0 20px 1rem;
    /*background-color: #385042b0;*/
    /*border: 1px solid;*/
    border-color: #c4c4c4;
    border-radius: 0.5rem;
    overflow: hidden;
    justify-content: center;
    align-items: center;
}


.menu-title {
    display: block;
    text-align: center;
}

.project-description {
max-height: 100%;
margin: 0.5rem 0;
border-bottom: 1px solid;
border-color: #c4c4c4;
display: flex;
}



/* How do i get the images to respect the ratio of the div?*/
.project-image {
    width: 100%;

    border-radius: 0.5rem;
    border: 1px solid;
    border-color: #c4c4c4;   
}

@media  screen and (max-width: 400px) {
    .project-image {
        max-width: 300px;  
    }
}

.github-icon {
    color: white;
}

.project-title {
    /*margin-right: 1rem;*/
}

@media screen and (max-width: 375px) {
    .project-title {
        font-size: 1.5rem;
    }    
}

.row {
   justify-content: center;
    display: flex; 
}

.skill {
    height: 100%; 
}

.skill-icon {
    height: 34px;
    margin: 1rem 0.8rem 1rem 0;
}

.skill-icon:hover {
    transform: scale(1.2);
    transition: all 0.2s linear;
}

.tooltip-text {
    display: none;
    font-family: 'Circular Std Book';
    color: white;

    margin-top: -0.15rem;
}

.skill-div {
    position: relative;
    display: inline;
    margin-bottom: 0.2rem;
}

.skill-icon:hover + .tooltip-text {
    display: block;
    width: auto;
    color: var(--font-primary);
    text-align: center;
    padding: 5px 0;
    border-radius: 6px;
    position: absolute;
    top: 90%;
    left: 38%;
    transform: translate(-50%, -50%);
}


.email {
    transition: all linear 0.15s;
    font-size: 1.4rem;
    background-image: linear-gradient(180deg,#b0f3f1,#ffcfdf);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}


.email-reverse {
    transition: all linear 0.25s;
    font-size: 1rem;
    /*background-image: linear-gradient(90deg,#b0f3f1,#ffcfdf);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;*/
}


.wrap {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    z-index: 1;
}

.card-image {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    object-fit: cover;
    display: none;
}

.card-item {
   position: relative;
   width: 400px;
   height: 550px;
}

.picture {
    position: relative;
}

.picture:hover  .project-overlay {
    opacity: 1;
    transition: all 0.3s linear;
}

.project-overlay {
    opacity: 0;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #000000;
    border-radius: 0.5rem;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

.overlay-text {
    position: absolute;
    top: 20%;
    left: 20%;
    transform: translate(-12.5%,-20%);
    font-size: 1.4rem;
}

@media screen and (max-width : 400px) {
    .overlay-text {
    font-size: 1rem;
    }
}

@media screen and (min-width : 1025px) {
    .overlay-text {
        top: 30%;
        left: 30%;
        transform: translate(-22.5%,-30%);
        }
}

.overlay-content {
    position: relative;
    width: 100%;
    height: 100%;
}

.overlay-link {
    position: absolute;
    top: 75%;
    left: 50%;
    transform: translate(-50%,-75%);
   z-index: 3;
   font-size: 1.5rem;
   font-family: 'Circular Std Book';
}

.overlay-link:hover {
    transition: all 0.05s linear;
    font-size: 1.8rem;
    background-image: linear-gradient(90deg,#b0f3f1,#ffcfdf);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

